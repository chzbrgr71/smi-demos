name: Container CI/CD
on:
  push:
    branches:
      - master    
jobs:
  build-deploy:
    env:
      ACR_NAME: briaracr
      AKS_CLUSTER_NAME: briar-kubecon-01
      AKS_RG: aks
    runs-on: ubuntu-latest
    steps:

    # slack notify: start (https://github.com/marketplace/actions/github-action-for-slack)
    - uses: Ilshidur/action-slack@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: kubecon2019
        SLACK_USERNAME: Github Actions
      with:
        args: 'flights-api CI/CD workflow started'

    # github Checkout
    - uses: actions/checkout@master

    # login to azure and build container image
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - run: az acr build -t hackfest/flights-api:${{ github.sha }} -r $ACR_NAME --no-logs app/flights-api

    # slack notify: ACR image built and stored in Azure
    - uses: Ilshidur/action-slack@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: kubecon2019
        SLACK_USERNAME: Github Actions
      with:
        args: 'container image created in ACR: ${{ env.ACR_NAME }}.azurecr.io/hackfest/flights-api:${{ github.sha }}'
      
    # set AKS context (https://github.com/Azure/aks-set-context)
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
        resource-group: ${{ env.AKS_RG }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      id: login
    
    # install kubernetes CLI
    - uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
      id: install
    
    # trigger canary deploy with Flagger
    - run: kubectl -n hackfest set image deployment/flights-api flights-api=$ACR_NAME.azurecr.io/hackfest/flights-api:${{ github.sha }}
 
    # slack notify: pipeline completed
    - uses: Ilshidur/action-slack@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: kubecon2019
        SLACK_USERNAME: Github Actions
      with:
        args: 'new version deployed as canary to AKS: ${{ env.ACR_NAME }}.azurecr.io/hackfest/flights-api:${{ github.sha }}'
